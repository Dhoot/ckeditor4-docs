/**
 * Downloads a binary file with the given name and data using browser interface.
 *
 * @method downloadFile
 * @member CKEDITOR.plugins.exportpdf
 * @param {String} fileName
 * @param {String} data
 */

/**
 * Export to PDF plugin namespace exposing helpers used by the plugin.
 *
 * @class CKEDITOR.plugins.exportpdf
 * @singleton
 */

/**
 * @fileOverview Plugin definition for the exportpdf, which provides a button
 * to export editor's data to PDF.
 */

/**
 * Configuration of `exportPdf` service - see ['Export to PDF' endpoint documentation](https://pdf-converter.cke-cs.com/docs) for more details.
 *
 * @cfg {Object} [exportPdf_options={}]
 * @member CKEDITOR.config
 */

/**
 * Default URL of 'Export to PDF' service used by the `exportPdf` plugin.
 *
 * @cfg {String} [exportPdf_service='https://pdf-converter.cke-cs.com/v1/convert']
 * @member CKEDITOR.config
 */

/**
 * Event fired when executing the `exportPdf` command that allows for additional data manipulation.
 * With this event, the raw HTML content of the editor which will be sent to an 'Export to PDF' service
 * can be altered or modified. It also allows to modify CSS rules and conversion options.
 *
 * It is possible by adding the listeners with the different priorities:
 *
 *	* 1-14: Data is available in the original string format.
 *	* 15: Data is processed by the plugin.
 *	* 16-19: Data that will be sent to the endpoint can be modified.
 *	* 20: Data is sent to the endpoint.
 *
 * @event exportPdf
 * @member CKEDITOR.editor
 * @param {CKEDITOR.editor} editor This editor instance.
 * @param {Object} data Data that is about to be sent to an endpoint.
 * @param {String} data.html
 * @param {String} data.css
 * @param {Object} data.options
 */

/**
 * Specifies paths to custom CSS stylesheets that will be attached to the document
 * send to the PDF service. This allows adding additional styling to generated PDF file.
 *
 * Relative stylesheet paths are converted to absolute ones so resources should
 * be accessible globally to allow PDF service to fetch them. If this option is used, the default
 * styles are not sent (in case of classic editor).
 *
 * @cfg {Array} [exportPdf_stylesheets=[]]
 * @member CKEDITOR.config
 */

/**
 * Specifies the name for files generated by `exportPdf` plugin. It can define a fixed name or can be configured
 * as a function that will be evaluated right before saving the file, for example:
 *
 * 		// File name will be set to the value of first 'h1' element from editor:
 * 		config.exportPdf_fileName = function( editor ) {
 * 			return editor.editable().findOne( 'h1' ).getText() + '.pdf';
 * 		}
 *
 * @cfg {String/Function} [exportPdf_fileName='ckeditor4-export-pdf.pdf']
 * @member CKEDITOR.config
 */
